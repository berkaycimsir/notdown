### This file was generated by Nexus Schema
### Do not make changes to this file directly


enum AuthErrors {
  INCORRECT_PASSWORD
  INCORRECT_USERNAME_OR_EMAIL
  USERNAME_OR_EMAIL_ALREADY_EXISTS
}

type AuthMutationReturnType {
  error: AuthErrors
  token: String
}

type CreateNoteMutationReturnType {
  error: NoteErrors
  note: Note
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Mutation {
  createNote(isPublished: Boolean!, markdown: String!, summary: String!, tags: [String!]!, title: String!, userId: ID!): CreateNoteMutationReturnType!
  createUser(email: String!, fullName: String!, password: String!, username: String!): AuthMutationReturnType!
  followAuthor(authorId: Int!, userId: Int!): User
  signIn(email: String, password: String!, username: String): AuthMutationReturnType!
  unfollowAuthor(authorId: Int!, userId: Int!): User
  updateUserProfile(newUser: UpdateUserNewUserInput!, userId: Int!): User
}

type Note {
  author: User!
  authorId: Int!
  createdAt: DateTime!
  id: Int!
  isPublished: Boolean!
  markdown: String!
  summary: String!
  tags: [String!]!
  title: String!
  updatedAt: DateTime!
}

enum NoteErrors {
  USER_DOES_NOT_EXISTS
}

type Query {
  getAllPublishedNotes: [Note]
  getAuthorByUsername(username: String!): User
  getAuthorsByName(searchString: String!): [User]
  getNoteById(noteId: Int!): Note
  getNotesByFollowing(userFollowing: [Int!]!): [Note]
  getNotesByTitle(title: String!): [Note]
  getPublishedNotes(authorId: ID!): [Note]
  getSavedNotes(authorId: ID!): [Note]
  hello(name: String!): String!
  me: User
}

input UpdateUserNewUserInput {
  about: String
  email: String
  fullName: String
  profileImage: String
  username: String
}

type User {
  about: String
  bookmarks: [Int!]!
  createdAt: DateTime!
  email: String!
  favorites: [Int!]!
  followers: [Int!]!
  following: [Int!]!
  fullName: String!
  id: Int!
  latestNote: Note
  notes: [Note!]!
  notesCount: Int
  profileImage: String
  publishedNotes: [Note]
  userBookmarks: [Note]
  userFavorites: [Note]
  userFollowers: [User]
  userFollowing: [User]
  username: String!
}